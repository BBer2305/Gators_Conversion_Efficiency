#read csv file and adjust columns
file <- read.csv("C:/Users/Ben/Documents/Projects/Gators_$DEff/Conversion_Results.csv")
#read csv file and adjust columns
file <- read.csv("C:/Users/Ben/Documents/Projects/Gators_Conversion_Efficiency/Conversion_Results.csv")
file$Yards.Gained <- NULL
names(file)[1] <- "Down"
file$Down <- as.factor(file$Down)
file$Current.Quarter <- as.factor(file$Current.Quarter)
#import random forest library
library("randomForest")
#create random forest and make predictions
DownRF = randomForest(Result~., data=file)
PredDRF = predict(DownRF, type="prob")
importance(DownRF, type=2)
View(PredDRF)
View(file)
help("cor")
cor(file$Result, file$Yards.To.Go)
cor(file$Yards.To.Goal, file$Yards.To.Go)
cor(file$Offense.SP., file$Offense.SP..Rank)
summary(file)
cor(file[,1])
cor(file[,1:15])
ggcor(file)
install.packages("GGally")
library(ggplot2)
ggcor(file)
ggcorr(file)
library(ggplot2)
ggcorr(file)
library(ggplot2)
importance(ResultTree, type=2)
#read csv file and adjust columns
file <- read.csv("C:/Users/Ben/Documents/Projects/Gators_Conversion_Efficiency/Conversion_Results.csv")
file$Yards.Gained <- NULL
names(file)[1] <- "Down"
file$Down <- as.factor(file$Down)
file$Current.Quarter <- as.factor(file$Current.Quarter)
#import random forest library
library("randomForest")
#create random forest and make predictions
ResultTree = randomForest(Result~., data=file)
PredDRF = predict(ResultTree, type="prob")
library(ggplot2)
importance(ResultTree, type=2)
ggcorr(file)
source("https://raw.githubusercontent.com/briatte/ggcorr/master/ggcorr.R")
ggcorr(file)
ggcorr(file, nbreaks=5)
corr(file$Score.Differential, file$Offense.SP..Rank)
cor(file$Score.Differential, file$Offense.SP..Rank)
ggcorr(file, nbreaks=10)
importance(ResultTree, type=2)
ggcorr(file, geom="circle",nbreaks=10)
ggcorr(file, label=TRUE, nbreaks=10)
ggcorr(file, label=TRUE, nbreaks=5)
file$Rush.Efficiency <- NULL
file$Pass.Efficiency <- NULL
file$Offense.SP. <- NULL
ggcorr(file, label=TRUE, nbreaks=5)
#create random forest and make predictions
ResultTree = randomForest(Result~., data=file)
PredDRF = predict(ResultTree, type="prob")
importance(ResultTree, type=2)
#remove a few more predictors
file$Rush.Grade <- NULL
file$Pass.Grade <- NULL
ggcorr(file, label=TRUE, nbreaks=5)
#create random forest and make predictions
ResultTree = randomForest(Result~., data=file)
PredDRF = predict(ResultTree, type="prob")
importance(ResultTree, type=2)
View(PredDRF)
View(file)
#read csv file and adjust columns
file <- read.csv("C:/Users/Ben/Documents/Projects/Gators_Conversion_Efficiency/Conversion_Results.csv")
file$Yards.Gained <- NULL
names(file)[1] <- "Down"
file$Down <- as.factor(file$Down)
file$Current.Quarter <- as.factor(file$Current.Quarter)
#create correlation chart
source("https://raw.githubusercontent.com/briatte/ggcorr/master/ggcorr.R")
ggcorr(file, label=TRUE, nbreaks=5)
#import random forest library
library("randomForest")
#create random forest and make predictions
ResultTree = randomForest(Result~., data=file)
PredDRF = predict(ResultTree, type="prob")
importance(ResultTree, type=2)
#remove highly correlated/less significant predictors and try again
file$Rush.Efficiency <- NULL
file$Pass.Efficiency <- NULL
file$Offense.SP. <- NULL
ggcorr(file, label=TRUE, nbreaks=5)
#create random forest and make predictions
ResultTreeB = randomForest(Result~., data=file)
PredDRF = predict(ResultTreeB, type="prob")
importance(ResultTreeB, type=2)
#remove a few more predictors
file$Rush.Grade <- NULL
file$Pass.Grade <- NULL
ggcorr(file, label=TRUE, nbreaks=5)
#create random forest and make predictions
ResultTreeC = randomForest(Result~., data=file)
PredDRF = predict(ResultTreeC, type="prob")
importance(ResultTreeC, type=2)
View(ResultTree)
View(ResultTreeB)
View(ResultTreeC)
View(ResultTree)
View(ResultTree)
View(ResultTreeB)
View(ResultTreeC)
ResultTreeC[["err.rate"]]
ResultTree[["err.rate"]]
ResultTreeB[["err.rate"]]
